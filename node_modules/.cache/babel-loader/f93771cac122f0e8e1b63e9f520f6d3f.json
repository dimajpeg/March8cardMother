{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\n/*#__NO_SIDE_EFFECTS__*/\nconst noop = any => any;\nexports.warning = noop;\nexports.invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n  exports.warning = (check, message) => {\n    if (!check && typeof console !== \"undefined\") {\n      console.warn(message);\n    }\n  };\n  exports.invariant = (check, message) => {\n    if (!check) {\n      throw new Error(message);\n    }\n  };\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n  let result;\n  return () => {\n    if (result === undefined) result = callback();\n    return result;\n  };\n}\n\n/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n  const toFromDifference = to - from;\n  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = seconds => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = milliseconds => milliseconds / 1000;\nexports.memo = memo;\nexports.millisecondsToSeconds = millisecondsToSeconds;\nexports.noop = noop;\nexports.progress = progress;\nexports.secondsToMilliseconds = secondsToMilliseconds;","map":{"version":3,"names":["Object","defineProperty","exports","value","noop","any","warning","invariant","process","env","NODE_ENV","check","message","console","warn","Error","memo","callback","result","undefined","progress","from","to","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds"],"sources":["/Users/dimamatusenko/Desktop/mam8march/node_modules/motion-utils/dist/cjs/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexports.warning = noop;\nexports.invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    exports.warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    exports.invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\n/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexports.memo = memo;\nexports.millisecondsToSeconds = millisecondsToSeconds;\nexports.noop = noop;\nexports.progress = progress;\nexports.secondsToMilliseconds = secondsToMilliseconds;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;;AAE7D;AACA,MAAMC,IAAI,GAAIC,GAAG,IAAKA,GAAG;AAEzBH,OAAO,CAACI,OAAO,GAAGF,IAAI;AACtBF,OAAO,CAACK,SAAS,GAAGH,IAAI;AACxB,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACvCR,OAAO,CAACI,OAAO,GAAG,CAACK,KAAK,EAAEC,OAAO,KAAK;IAClC,IAAI,CAACD,KAAK,IAAI,OAAOE,OAAO,KAAK,WAAW,EAAE;MAC1CA,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC;IACzB;EACJ,CAAC;EACDV,OAAO,CAACK,SAAS,GAAG,CAACI,KAAK,EAAEC,OAAO,KAAK;IACpC,IAAI,CAACD,KAAK,EAAE;MACR,MAAM,IAAII,KAAK,CAACH,OAAO,CAAC;IAC5B;EACJ,CAAC;AACL;;AAEA;AACA,SAASI,IAAIA,CAACC,QAAQ,EAAE;EACpB,IAAIC,MAAM;EACV,OAAO,MAAM;IACT,IAAIA,MAAM,KAAKC,SAAS,EACpBD,MAAM,GAAGD,QAAQ,CAAC,CAAC;IACvB,OAAOC,MAAM;EACjB,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,QAAQ,GAAGA,CAACC,IAAI,EAAEC,EAAE,EAAEnB,KAAK,KAAK;EAClC,MAAMoB,gBAAgB,GAAGD,EAAE,GAAGD,IAAI;EAClC,OAAOE,gBAAgB,KAAK,CAAC,GAAG,CAAC,GAAG,CAACpB,KAAK,GAAGkB,IAAI,IAAIE,gBAAgB;AACzE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,qBAAqB,GAAIC,OAAO,IAAKA,OAAO,GAAG,IAAI;AACzD;AACA,MAAMC,qBAAqB,GAAIC,YAAY,IAAKA,YAAY,GAAG,IAAI;AAEnEzB,OAAO,CAACc,IAAI,GAAGA,IAAI;AACnBd,OAAO,CAACwB,qBAAqB,GAAGA,qBAAqB;AACrDxB,OAAO,CAACE,IAAI,GAAGA,IAAI;AACnBF,OAAO,CAACkB,QAAQ,GAAGA,QAAQ;AAC3BlB,OAAO,CAACsB,qBAAqB,GAAGA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script"}